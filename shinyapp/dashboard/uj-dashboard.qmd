---
title: "The Unjournal data dashboard"
server: shiny
format:
  dashboard:
    theme: simplex
    expandable: false
---

```{r}
#| context: setup
#| include: false

library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
library(forcats)
library(ggplot2)
library(ggiraph)
library(here)
library(lubridate)
library(shiny)
library(stringr)
library(tidyr)

# names are display periods; values are relevant starting dates for data
periods <- c(
  "Ever"      = as.Date("1900-01-01"),
  "12 months" = today() - period(12, "months"),
  "6 months"  = today() - period(6, "months"),
  "3 months"  = today() - period(3, "months"),
  "1 month"   = today() - period(1, "months")
)

```


```{r}
#| context: data
#| include: false

research <- readr::read_csv(here("data/research.csv"))
ratings <- readr::read_csv(here("data/rsx_evalr_rating.csv"))

res_ratings <- inner_join(ratings, research, 
                          by = join_by(research == label_paper_title))

research_areas <- unique(research$main_cause_cat_abbrev)
research_areas <- c("All", research_areas)
names(research_areas) <- research_areas

```


## {.toolbar}

<style>
.selectize-input {
  white-space: nowrap;
}
.selectize-dropdown {
  width: 450px !important;
}
#period + .shiny-input-select .selectize-dropdown {
  width: 150px !important;
}
</style>

```{r}
selectInput("period", "Period", names(periods))
```

```{r}
selectInput("research_area", "Research area", names(research_areas))
```


```{r}
textOutput("papers_evaluated")
```


## {.tabset}


### Research areas

#### Column

The barplot shows the [research areas](https://globalimpact.gitbook.io/the-unjournal-project-and-communication-space/policies-projects-evaluation-workflow/considering-projects/what-specific-areas-do-we-cover) of evaluated papers. 

```{r}
plotOutput("barplot_areas")
```


### Proposed papers

#### Column

The plot below shows the status of all papers proposed for evaluation. We
don't currently record when papers were proposed, so this plot ignores the
time period chosen above.

```{r}
plotOutput("barplot_proposals")
```


### Ratings

#### Column

The plot below shows the distribution of ratings by research area. Ratings
are evaluators' overall assessments of research quality, on a 0-100 scale.

```{r}
girafeOutput("plot_ratings")
```

### Questions 

#### Column

Below we show the distribution of evaluators' answers to detailed, quantitative
questions about different aspects of the research. For more information
on these questions, see
[here](https://globalimpact.gitbook.io/the-unjournal-project-and-communication-space/policies-projects-evaluation-workflow/evaluation/guidelines-for-evaluators).


```{r}
girafeOutput("plot_questions")
```


### Sources

#### Column

Papers can come to be evaluated by different routes: chosen by Unjournal staff,
submitted by the authors, or suggested by another third party. 
Many come from our [internal project to evaluate NBER papers](https://globalimpact.gitbook.io/the-unjournal-project-and-communication-space/policies-projects-evaluation-workflow/considering-projects/direct-evaluation-track#the-case-for-this-direct-evaluation). This graph shows the sources of
evaluated papers. Papers awaiting evaluation or selection are not included.

```{r}
plotOutput("barplot_sources")
```



```{r}
#| context: server

start_date <- reactive({
  periods[input$period]  
})

evals <- reactive({
  res_ratings |> 
    filter(
      row_created_date >= start_date(),
      input$research_area == "All" | main_cause_cat_abbrev == input$research_area
    )
})

evaled_research <- reactive({
  research |> 
    filter(status %in% "50_published evaluations (on PubPub, by Unjournal)") |> 
    # this applies the time filter
    semi_join(evals(), by = join_by(label_paper_title == research))
})

proposals <- reactive({
  research |> 
      filter(
      input$research_area == "All" | main_cause_cat_abbrev == input$research_area
    )
})

n_evals <- reactive(n_distinct(select(evals(), research, evaluator)))
n_papers <- reactive(nrow(evaled_research()))
all_cats <- reactive({
  evaled_research()$main_cause_cat_abbrev
})
n_areas <- reactive(n_distinct(all_cats()))

n_proposals <- reactive(nrow(proposals()))


output$papers_evaluated <- renderText({
  if (input$research_area == "All") {
    glue::glue("{n_evals()} evaluations of
    {n_papers()} papers in {n_areas()} distinct research areas")  
  } else {
    glue::glue("{n_evals()} evaluations of {n_papers()} papers") 
  }
})


output$barplot_areas <- renderPlot({
  data.frame(area = all_cats()) |>
    filter( ! is.na(area)) |>
    mutate(
      area = stringr::str_to_title(area),
      # Workaround to cope with long area categories. 
      # TODO: remove once fixed.
      # area = stringr::str_remove(area, "\\(.*\\)"),
      # area = stringr::str_remove(area, "\\[.*\\]"),
      area = forcats::fct_infreq(area),
      area = forcats::fct_rev(area),
    ) |>
    ggplot() +
      geom_bar(aes(y = area, fill = area)) +
      scale_x_continuous(
        breaks = scales::breaks_extended(Q = c(1, 5, 2, 4, 3))
      ) +
      theme_minimal() +
      theme(
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.text.y = element_text(size = 16)
      ) +
      labs(
        title = "Research areas of evaluated papers",
        x = NULL,
        y = NULL
      )
})


output$barplot_proposals <- renderPlot({
  proposals() |>
    mutate(
      Status = case_match(status,
        c("03_awaiting authors' consent (if needed) or update",
          "02_final consideration needed",
          "01_Needs prioritization/assessor rating")
          ~ "Under consideration",
        c("de-prioritized bc. of journal-publication status, authors' permission, age, etc.",
          "authors rejected/blocked us",
          "deprioritized -- low ratings/voting",
          "deprioritized -- out of scope or other subjective judgment or managerial concern",
          "deprioritized - no open access version",
          "Not a paper/project")
          ~ "Deprioritized",
        c("Applied and Policy Research Stream",
          "20_awaiting_evaluations",
          "contacting/awaiting_authors_response_to_evaluation",
          "In interim evaluation",
          "10_seeking_(more)_evaluators",
          "04_selected_choose_evaluation_manager")
          ~ "Accepted and under evaluation",
        c("50_published evaluations (on PubPub, by Unjournal)")
          ~ "Evaluation published",
        .default = "Unknown"
      ),
      Status = forcats::fct_relevel(Status, 
                                    "Under consideration", 
                                    "Deprioritized", 
                                    "Accepted and under evaluation", 
                                    "Evaluation published", "Unknown"),
      Status = forcats::fct_rev(Status)
      
    ) |>
    ggplot() +
      geom_bar(aes(y = Status, fill = Status)) +
      theme_minimal() +
      theme(
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.text.y = element_text(size = 18)
      ) +
      labs(
        title = "Status of papers proposed for evaluation",
        x = NULL,
        y = NULL
      )
})


output$plot_ratings <- renderGirafe({
  ggp <- evals() |>
    filter(criteria == "overall") |>
    mutate(
      area = stringr::str_to_title(main_cause_cat_abbrev),
      area = forcats::fct_infreq(area),
      area = forcats::fct_rev(area),
    ) |>
    ggplot(aes(y = area, x = middle_rating, color = area)) +
      ggiraph::geom_point_interactive(
        aes(tooltip = research)
      ) +
      stat_summary(fun = mean, na.rm = TRUE, shape = "cross", size = 2) +
      scale_x_continuous(breaks = seq(0, 100, 20), limits = c(0, 100)) +
      theme_minimal() +
      theme(
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.y = element_text(size = 12)
      ) +
      labs(
        title = "Overall ratings of papers by research area",
        subtitle = "Crosses show per-area averages",
        x = NULL,
        y = NULL
      )
  
  girafe(ggobj = ggp, 
         width_svg = 9,
         options = list(opts_sizing(rescale = FALSE, width = 1)))
})


output$plot_questions <- renderGirafe({
  ggp <- evals() |>
    select(research, criteria, middle_rating) |>
    mutate(
      criteria = case_match(criteria,
        "overall" ~ "Overall assessment",
        "adv_knowledge" ~ "Advancing our knowledge and practice",
        "methods" ~ "Methods: justification, reasonableness, validity, robustness",
        "logic_comms" ~ "Logic and communication",
        "real_world" ~ "Real world relevance",
        "gp_relevance" ~ "Relevance to global priorities",
        "open_sci" ~ "Open, collaborative, replicable science",
        .default = NA_character_ # this removes two criteria on publication
      ),
      criteria = forcats::fct_relevel(criteria, "Overall assessment"),
      criteria = forcats::fct_rev(criteria)
    ) |>
    filter(! is.na(criteria)) |>
    ggplot(aes(y = criteria, x = middle_rating, color = criteria)) +
      ggiraph::geom_point_interactive(
        aes(tooltip = research)
      ) +
      stat_summary(fun = mean, na.rm = TRUE, shape = "cross", size = 2) +
      scale_x_continuous(breaks = seq(0, 100, 20), limits = c(0, 100)) +
      theme_minimal() +
      theme(
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.y = element_text(size = 12, family = "sans")
      ) +
      labs(
        title = "Answers to quantitative evaluation questions",
        subtitle = "Crosses show per-question averages",
        x = NULL,
        y = NULL
      )
    
  girafe(ggobj = ggp, 
         width_svg = 8,
         options = list(opts_sizing(rescale = FALSE, width = 1)))
})


output$barplot_sources <- renderPlot({
  evaled_research() |>
    mutate(
      Source = case_match(source_main,
        "internal-NBER"                ~ "Internal (NBER)",
        "internal-from-syllabus-agenda-policy-database" ~ "Internal",
        "suggested - internally"       ~ "Internal",
        "submitted (by author(s))"     ~ "Author",
        "suggested - externally"       ~ "Third party",
        "suggested - externally - NGO" ~ "Third party (NGO)",
        .default = "Unknown"
      ),
      Source = forcats::fct_infreq(Source),
      Source = forcats::fct_rev(Source)
    ) |>
    ggplot() +
      geom_bar(aes(y = Source, fill = Source)) +
      scale_x_continuous(
        breaks = scales::breaks_extended(Q = c(1, 5, 2, 4, 3))
      ) +
      theme_minimal() +
      theme(
        legend.position = "none",
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.text.y = element_text(size = 16)
      ) +
      labs(
        title = "Sources of evaluated papers",
        x = NULL,
        y = NULL
      )
})


```

